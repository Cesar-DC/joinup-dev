<?php

/**
 * @file
 * Contains install, update, uninstall functionality for Joinup Migrate module.
 */

use Drupal\Core\Database\Database;

/**
 * Implements hook_install().
 */
function joinup_migrate_install() {
  // Create intermediary tables we need for migration. The tables will be
  // created on the source database because they will provide source data.
  $db = Database::getConnection('default', 'migrate');
  foreach (['joinup_migrate_mapping', 'joinup_migrate_prepare'] as $table) {
    $db->schema()->dropTable($table);
    $db->schema()->createTable($table, joinup_migrate_source_db_schema($table));
  }

  // Install MySQL views.
  foreach (file_scan_directory(__DIR__ . '/fixture', '/\.sql$/') as $file) {
    $db->query(file_get_contents($file->uri))->execute();
  }

  // Fix the migrate_report path.
  \Drupal::configFactory()->getEditable('migrate_report.config')
    ->set('report_dir', 'public://migration')
    ->save();
}

/**
 * Implements hook_uninstall().
 */
function joinup_migrate_uninstall() {
  $db = Database::getConnection('default', 'migrate');
  foreach (['joinup_migrate_mapping', 'joinup_migrate_prepare'] as $table) {
    $db->schema()->dropTable($table);
  }

  // Remove MySQL views.
  foreach (file_scan_directory(__DIR__ . '/fixture', '/\.sql$/') as $file) {
    $db->query("DROP VIEW IF EXISTS {$file->name}")->execute();
  }
}

/**
 * Gets the schema definition for a specific table.
 *
 * @param string $table
 *   The table for which to get the schema definition.
 *
 * @return array[]
 *   The table schema definition.
 */
function joinup_migrate_source_db_schema($table) {
  $schema = [
    'joinup_migrate_mapping' => [
      'description' => 'Keeps migration mapping data',
      'fields' => [
        'nid' => [
          'description' => 'The node ID from of the source item',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ],
        'type' => [
          'description' => 'Source node-type',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ],
        'collection' => [
          'description' => 'Collection',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'policy' => [
          'description' => 'Policy domain 1',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'policy2' => [
          'description' => 'Policy domain 2',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'new_collection' => [
          'description' => 'If "Yes" a new collection will be created using the data from the Excel sheet. If "No" then the collection will be created using migrated data.',
          'type' => 'varchar',
          'length' => 32,
          'not null' => TRUE,
          'default' => '',
        ],
        'migrate' => [
          'description' => '1 if this content should be migrated, 0 otherwise.',
          'type' => 'int',
          'size' => 'tiny',
          'default' => 1,
        ],
        'abstract' => [
          'description' => 'Abstract',
          'type' => 'text',
        ],
        'logo' => [
          'description' => 'Logo',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'banner' => [
          'description' => 'Banner',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'owner' => [
          'description' => 'Owner',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'elibrary' => [
          'description' => 'Elibrary Creation',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'collection_status' => [
          'description' => 'Collection status',
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
        ],
        'content_item_status' => [
          'description' => 'Content item status',
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
        ],
        'row_index' => [
          'description' => 'The Excel row position on last import',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ],
      ],
      'primary key' => ['nid'],
      'indexes' => [
        'new_collection' => ['new_collection'],
        'collection' => ['collection'],
        'migrate' => ['migrate'],
      ],
    ],
    'joinup_migrate_prepare' => [
      'fields' => [
        'collection' => [
          'description' => 'Collection',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'type' => [
          'description' => 'Source node-type',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ],
        'nid' => [
          'description' => 'The node ID from of the source item',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => FALSE,
          'default' => 0,
        ],
        'policy2' => [
          'description' => 'Policy domain 2',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ],
        'policy' => [
          'description' => 'Policy domain',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'abstract' => [
          'description' => 'Abstract',
          'type' => 'text',
        ],
        'logo' => [
          'description' => 'Logo',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'banner' => [
          'description' => 'Banner',
          'type' => 'varchar',
          'length' => 255,
          'not null' => FALSE,
        ],
        'elibrary' => [
          'description' => 'Elibrary creation',
          'type' => 'int',
          'size' => 'tiny',
          'not null' => FALSE,
        ],
        'publisher' => [
          'description' => 'Publisher NIDs',
          'type' => 'varchar',
          'length' => 1024,
          'not null' => FALSE,
        ],
        'contact' => [
          'description' => 'Contact NIDs',
          'type' => 'varchar',
          'length' => 1024,
          'not null' => FALSE,
        ],
        'status' => [
          'description' => 'Status',
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
        ],
        'roles' => [
          'description' => 'Roles',
          'type' => 'text',
        ],
      ],
      'indexes' => [
        'collection' => ['collection'],
        'nid' => ['nid'],
        'type' => ['type'],
      ],
    ],
  ];

  return $schema[$table];
}
