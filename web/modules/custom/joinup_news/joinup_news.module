<?php

/**
 * @file
 * Provides functionality for the news content entity.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\joinup_news\Guard\JoinupNewsFulfillmentGuard;
use Drupal\og\Og;
use Drupal\rdf_entity\RdfInterface;

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function joinup_news_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  // @todo Add test coverage for these constraints.
  // @see https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-2500
  if ($entity_type->id() == 'node' && $bundle == 'news') {
    if (!empty($fields['title'])) {
      $fields['title']->addConstraint('UniqueFieldInBundle', ['bundles' => ['news']]);
    }

    if (!empty($fields['field_news_shared_in'])) {
      $fields['field_news_shared_in']->addConstraint('UniqueFieldValue');
      $fields['field_news_shared_in']->addConstraint('ParentReference', [
        'service' => 'joinup_news.relations_manager',
        'method' => 'getNewsParent',
      ]);
    }
  }
}

/**
 * Implements hook_node_access().
 *
 * Interrupts the permissions for updating a node. The permission is not
 * granted if there are no transitions allowed for the current state of the
 * node.
 */
function joinup_news_node_access(EntityInterface $node, $op, AccountInterface $account) {
  if ($node->bundle() != 'news') {
    return AccessResult::neutral();
  }

  if ($op == 'update') {
    $allowed_transitions = $node->get('field_news_state')->first()->getTransitions();
    if (empty($allowed_transitions)) {
      return AccessResult::forbidden();
    }
  }

  // Check if the user is a member and has a global permission.
  if ($op == 'view' && !$node->isPublished()) {
    $parent = JoinupNewsFulfillmentGuard::getParent($node);
    // Temporary workaround because Og is not checking for membership.
    // @todo Remove workaround as soon as this is fixed in OG.
    // @see https://github.com/amitaibu/og/pull/217
    // @see https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-2622
    if ($parent instanceof RdfInterface && Og::isMember($parent, Drupal::currentUser())) {
      /** @var \Drupal\Core\Access\AccessResult $global_permission */
      $global_permission = \Drupal::service('og.access')->userAccessEntity('view any unpublished content', $parent, $account);
      if ($global_permission->isAllowed()) {
        return $global_permission;
      }

      $global_permission = \Drupal::service('og.access')->userAccessEntity('view any unpublished news content', $parent, $account);
      if ($global_permission->isAllowed()) {
        return $global_permission;
      }
    }
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function joinup_news_field_widget_entity_reference_autocomplete_form_alter(&$element, FormStateInterface $form_state, $context) {
  /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $items */
  $items = $context['items'];

  // Handle only the specific field.
  $field_name = $items->getFieldDefinition()->getName();
  if ($field_name !== 'field_news_shared_in') {
    return;
  }

  $entity = $items->getEntity();
  /** @var \Drupal\rdf_entity\RdfInterface $parent */
  $parent = \Drupal::service('joinup_news.relations_manager')->getNewsParent($entity);

  if (!empty($parent)) {
    // Limit the referenceable entities to be of the same bundle of the parent
    // of the news.
    $element['target_id']['#selection_settings']['target_bundles'] = [
      $parent->bundle() => $parent->bundle(),
    ];
  }
}
