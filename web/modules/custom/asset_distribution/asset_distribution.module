<?php

/**
 * @file
 * Contains asset_distribution.module.
 */

use \Drupal\Core\Entity\EntityInterface;
use \Drupal\file\Entity\File;
use \Drupal\Component\Utility\UrlHelper;
use \Drupal\rdf_entity\RdfInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * Before an entity is saved to the database, we need to synchronize the
 * access urls with the file field and calculate the file size for
 * files hosted internally.
 */
function asset_distribution_rdf_entity_presave(EntityInterface $entity) {
  global $base_url;
  if ($entity->bundle() != 'asset_distribution') {
    return;
  }
  $file_urls = [];
  $file_size = 0;

  // Get all access urls.
  $access_urls = $entity->get('field_ad_access_url')->getValue();

  // Get all file urls.
  /** @var \Drupal\field\FieldConfigInterface $file_field */
  foreach ($entity->get('field_ad_file') as $file_field) {
    $file = File::load($file_field->get('target_id')->getValue());
    if ($file) {
      $file_urls[] = $file->url();
    }

    $file_size += intval($file->getSize());
  }

  // Remove removed files from access urls.
  foreach ($access_urls as $delta => $access_url) {
    if (UrlHelper::isExternal($access_url['uri']) && UrlHelper::externalIsLocal($access_url['uri'], $base_url) && !in_array($access_url['uri'], $file_urls)
    ) {
      unset($access_urls[$delta]);
    }
  }

  // Add new or updated files to the access urls.
  foreach ($file_urls as $file_url) {
    if (!array_search($file_url, array_column($access_urls, 'uri'))) {
      $access_urls[]['uri'] = $file_url;
    }
  }

  // Set the values.
  $entity->get('field_ad_access_url')->setValue($access_urls);
  $entity->get('field_ad_file_size')->setValue(intval($file_size / 1024));
}

/**
 * Implements hook_ENTITY_TYPE_create().
 */
function asset_distribution_rdf_entity_create(EntityInterface $entity) {
  /** @var \Drupal\rdf_entity\RdfInterface $rdf_entity */
  $rdf_entity = \Drupal::routeMatch()->getParameter('rdf_entity');

  if ($rdf_entity instanceof RdfInterface && $rdf_entity->bundle() == 'asset') {
    $assigned_distributions = $rdf_entity->get('field_is_asset_distribution')->getValue();
    $assigned_distributions[]['target_id'] = $entity->id();
    $rdf_entity->set('field_is_asset_distribution', $assigned_distributions);
  }
}
