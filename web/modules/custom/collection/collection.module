<?php

/**
 * @file
 * Main functions and hook implementations of the Collection module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\og\Og;
use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function collection_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Hide the 'negation' option for collection block visibility. There are no
  // good use cases to show a block on all pages, except on collection pages.
  $form['visibility']['collection']['negate']['#access'] = FALSE;
}

/**
 * Implements hook_entity_insert().
 */
function collection_entity_insert(EntityInterface $entity) {
  collection_entity_update($entity);
}

/**
 * Implements hook_entity_update().
 *
 * Invalidate the og_content cache tag of the groups this entity belongs to.
 */
function collection_entity_update(EntityInterface $entity) {
  // @todo Fix cache invalidating.
  // @see ISAICP-2475.
  if (TRUE) {
    return;
  }
  $entity_type_id = $entity->getEntityTypeId();
  $bundle = $entity->bundle();
  if (Og::isGroupContent($entity_type_id, $bundle)) {
    foreach (Og::getGroupIds($entity) as $entity_type => $ids) {
      foreach ($ids as $id) {
        Cache::invalidateTags(['og_group_content:' . $id]);
      }
    }
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function collection_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  if ($entity_type->id() == 'rdf_entity' && $bundle == 'collection' && !empty($fields['label'])) {
    $fields['label']->addConstraint('UniqueFieldInBundle', ['bundles' => ['collection']]);
  }
}
