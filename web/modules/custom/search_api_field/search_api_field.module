<?php

/**
 * @file
 * The entity hooks needed to display facets in pseudo-fields.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_entity_extra_field_info().
 *
 * Create a pseudo field for each facet region.
 */
function search_api_field_entity_extra_field_info() {
  $extra = array();
  $map = \Drupal::entityManager()->getFieldMapByFieldType('search');
  $ids = [];
  $bundles_lookup = [];
  foreach ($map as $type => $info) {
    foreach ($info as $name => $data) {
      $ids[] = "$type.$name";
      foreach ($data['bundles'] as $bundle_name) {
        $bundles_lookup["$type.$name"][] = $bundle_name;
      }
    }
  }

  $fs = FieldStorageConfig::loadMultiple($ids);
  /** @var \Drupal\field\Entity\FieldStorageConfig $field_config */
  foreach ($fs as $id => $field_config) {
    $facet_regions = $field_config->getSetting('facet_regions');
    foreach ($facet_regions as $region_id => $region_label) {
      foreach ($bundles_lookup[$id] as $bundle) {
        $name = str_replace('.', '_', "$id.$region_id");
        $extra[$field_config->getTargetEntityTypeId()][$bundle]['display'][$name] = array(
          'label' => t('Facet region: @region', ['@region' => $region_label]),
          'weight' => 0,
          'visible' => FALSE,
        );
      }
    }
  }

  return $extra;
}

/**
 * Implements hook_entity_view().
 */
function search_api_field_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode != 'full') {
    return;
  }
  $facet_manager = \Drupal::getContainer()->get('facets.manager');

  /** @var \Drupal\Core\Entity\EntityStorageInterface $facet_storage */
  $facet_storage = \Drupal::getContainer()->get('entity_type.manager')->getStorage('facets_facet');
  /** @var Drupal\field\FieldConfigInterface $definition */
  foreach ($entity->getFieldDefinitions() as $field_name => $definition) {
    if ($definition->getType() != 'search') {
      continue;
    }
    $id = $definition->getTargetEntityTypeId() . '.' . $field_name;
    /** @var \Drupal\facets\FacetInterface $facet */
    $facets = $facet_storage->loadByProperties(['facet_source_id' => 'search_api_field:' . $id]);
    /** @var Drupal\search_api_field\Plugin\Field\FieldType\SearchItem $field_data */
    foreach ($entity->get($field_name) as $field_data) {
      /** @var Drupal\Core\TypedData\Plugin\DataType\Any $value */
      $value = $field_data->get('value');
      $areas = $value->getValue();
      foreach ($areas['fields'] as $facet_name => $facet_data) {
        if (!isset($facets[$facet_name])) {
          continue;
        }
        $name = str_replace('.', '_', $id . '.' . $facet_data['region']);
        if ($display->getComponent($name)) {
          // Let the facet_manager build the facets.
          $build[$name][] = $facet_manager->build($facets[$facet_name]);
        }
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function search_api_field_theme() {
  $result_item_variables = [
    'variables' => [
      'value' => '',
      'show_count' => FALSE,
      'count' => NULL,
      'type' => NULL,
    ],
  ];
  return array(
    'facets_type_wrapper' => array(
      'variables' => array(
        'items' => array(),
        'attributes' => array(),
      ),
    ),
    'facets_type_result_item' => $result_item_variables,
    'facets_type_result_item_active' => $result_item_variables,
    'search_api_field' => array(
      'variables' => array(
        'form' => NULL,
        'search_title' => NULL,
        'no_of_results' => NULL,
        'no_results_found' => NULL,
        'search_help' => NULL,
        'results' => NULL,
        'pager' => NULL,
      ),
    ),
    'search_api_field_result' => array(
      'variables' => array(
        'item' => NULL,
        'entity' => NULL,
      ),
    ),
  );
}
